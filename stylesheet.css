@font-face {
  font-family: 'Saiyan Sans';
  src: url('Font-Styles/Saiyan-Sans.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'Saiyan Sans';
  src: url('Font-Styles/Saiyan-Sans Left Oblique.ttf') format('truetype');
  font-weight: normal;
  font-style: oblique;
}

@font-face {
  font-family: 'Saiyan Sans';
  src: url('Font-Styles/Saiyan-Sans Right Oblique.ttf') format('truetype');
  font-weight: normal;
  font-style: oblique;
}


*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}
body{
  background-color: white;
  zoom: 90%;
}
#app {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.doors {
  display: flex;
}

.door {
  background: #00000000;
  box-shadow: 0 0 3px 2px rgba(0, 0, 0, 0.4) inset;
  width: 400px;
  height: 400px;
  overflow: hidden;
  border-radius: 50%;
  margin: 5ch;
  box-shadow: 10px 10px 10px lightblue;
}
.door:hover{
  box-shadow: 10px 10px 10px orange;
}
@media (max-width: 768px) {
  .door, .boxes {
    width: 100px; /* Set a fixed size or percentage based on your design */
    height: 100px; /* This height will maintain the aspect ratio for a square */
    margin: 1ch;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
  }

  .boxes img {
    width: auto; /* This will maintain the image's aspect ratio */
    max-height: 100%; /* This will ensure the image does not overflow its container */
    border-radius: 50%; /* Maintain the circular shape */
  }
}
.boxes {
    width: 400px;
    height: 400px;
    background-size: cover;
    background-position: center;
    transition: transform 5s ease-in-out;
}
img{
  max-width: 100%;
  height: auto;
}
.door img {
  max-width: 100%;
  height: auto;
}
.boxes img {
  max-width: 100%;
  height: auto;
  border-radius: 50%; /* To match the circular shape of the container */
}

.box {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 3rem;
}


.buttons {
  margin: 1rem 0 2rem 0;
}

button {
  cursor: pointer;
  font-size: 1.2rem;
  text-transform: uppercase;
  margin: 0 0.2rem 0 0.2rem;
}

.info {
  position: fixed;
  bottom: 0;
  width: 100%;
  text-align: center;
}
.SplashScreen{
  width: 10%;
  height: inherit;
  position: center;
}
.SplashScreen:hover{
  transition: 1s;
  box-shadow: 0 0 2px 1px lightgray
}
h1{
  text-align: center;
  font-size: 58px; 
  color: #ff991e;
}
footer{
  color: #ff991e;
  text-align: center;
  font-family: 'Saiyan Sans', sans-serif;
  font-size: 25px;
}
header{
  font-family: 'Saiyan Sans', sans-serif;
}
p{
  font-family: 'Trebuchet MS', sans-serif;
  font-size: 20px;
  color: black;
}
/*Switch*/
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: white;
  border: 1px solid #000000;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: black;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  border: none;
  background-color: black;
}

input:focus + .slider {
  box-shadow: 0 0 2px white;
}

input:checked + .slider:before {
  background-color: #ffffff; /* Circle is white when checked */
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
  display: flex;
  justify-content: center;
}

.slider.round:before {
  border-radius: 50%; 
}
.dark-mode::before{
  background:white;
}
.dark-mode{
  background:#343541;
}
.dark-mode .filter-group {
  color: white;
}
.dark-mode .FilterHeader{
  color: white;
}
body, #app {
  transition: background-color 1s, color 1s; /* Smooth transition for background and color */

}
.dark-mode p {
  color: #ffffff; /* This sets the paragraph text to white in dark mode */
}
.filter-group{
  display:none;
  font-family: 'Trebuchet MS', sans-serif;
}
button{
  border-radius: 20px;
  font-family: 'Saiyan Sans', sans-serif;
  background-color: #f1f1f1; /* Light grey background */
  color: #333; /* Dark text for light background */
  border: 1px solid #ccc; /* Slightly darker border for definition */
  padding: 10px 20px; /* Padding for spacing around the text */
  transition: background-color 0.3s, color 0.3s;
}
button:hover{
  box-shadow:0px 0px 1px 1px rgba(183, 55, 5, 0.5);
}
.dark-mode button{
  background-color: #333;
  color: #f1f1f1;
  border: 1px solid #444;
}
.arrow{
  transition: transform 0.3s ease;
}
.arrow:hover{
  box-shadow:0px 0px 1px 1px rgba(0,0,0,0.5);
  color: orange;

}
.FilterHeader{
  font-family: 'Saiyan Sans', sans-serif;
  
}
.filter-container {
  display: flex;
  justify-content: space-around;
}

.filter-group {
  flex-basis: 100%;
}
.filter-group label{
  font-size: 18px;
}
.filter-label {
  transition: color 0.5s ease;
}